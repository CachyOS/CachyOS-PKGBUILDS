# Original Julia PKGBUILD
# Maintainer: Antonio Rojas <arojas@archlinux.org>
# Contributor: Alexander F. RÃ¸dseth <xyproto@archlinux.org>
# Contributor: Eli Schwartz <eschwartz@archlinux.org>
# Contributor: Lex Black <autumn-wind@web.de>
# Contributor: Michael Jakl <jakl.michael@gmail.com>
# Contributor: devmotion <nospam-archlinux.org@devmotion.de>
# Contributor: Valentin Churavy <v.churavy@gmail.com>

# Julia-PGO PKGBUILD
# Maintainer: Laio Seman <laio [at] ieee.org>
# using PGO-LTO script from https://github.com/JuliaLang/julia/pull/45641#issue-1268010204

pkgname=julia
pkgver=1.9.4
pkgrel=1
pkgdesc="Julia with Profile-Guided Optimization (PGO)"
arch=('x86_64')
url="http://julialang.org/"
license=('MIT')  # Update if different
depends=(blas64-openblas
         fftw
         libblastrampoline
         libgit2
         libunwind
         libutf8proc
         lld
         llvm15-libs
         mbedtls2
         openlibm
         p7zip
         pcre2
         suitesparse)
makedepends=(cmake
             gcc-fortran
             libwhich
             llvm15
             patchelf
             python)
optdepends=('gnuplot: If using the Gaston Package from julia')
source=(https://github.com/JuliaLang/julia/releases/download/v$pkgver/$pkgname-$pkgver-full.tar.gz{,.asc}
        julia-libunwind-1.6.patch
        julia-hardcoded-libs.patch
        julia-libgit2-1.7.patch
        julia-suitesparse-7.patch
        959902f1.patch
        e08e1444.patch
        f11bfc6c.patch
        21d4c2f1.patch)
md5sums=('81b8445f1e08a4114344ed6faeeca42f'
         'SKIP'
         '2abac44b32b5178f94418962badc32ae'
         '7bf7a9a668087986413c8f04d4b77e53'
         '0a8a7bf0bca91fe5d8b89c6ca095da1c'
         'bceea22db884602102f1dd3594c59f19'
         '3b3c0ad194fd42115f0c6334eb7187e3'
         '546dbad339d797e95502c37ddcb83757'
         'd270a4d4c7f2793e53f58b5c66daa020'
         '62eb8e4eccd35c2d0ffcfc8e1a590a81')
validpgpkeys=('3673DF529D9049477F76B37566E3C7DC03D6E495') # Julia (Binary signing key) <buildbot@julialang.org>


_make() {
  local make_options=(
    prefix=/usr
    bindir=/usr/bin
    sysconfdir=/etc
    libexecdir=/usr/lib
    USE_BINARYBUILDER=0
    USE_SYSTEM_CSL=1
    USE_SYSTEM_LLVM=1
    USE_SYSTEM_LLD=1
    USE_SYSTEM_LIBUNWIND=1
    USE_SYSTEM_PCRE=1
    USE_SYSTEM_BLAS=1
    USE_SYSTEM_LAPACK=1
    USE_SYSTEM_LIBBLASTRAMPOLINE=1
    USE_SYSTEM_GMP=1
    USE_SYSTEM_MPFR=1
    USE_SYSTEM_LIBSUITESPARSE=1
    USE_SYSTEM_LIBWHICH=1
    USE_SYSTEM_DSFMT=0
    USE_SYSTEM_LIBUV=0
    USE_SYSTEM_UTF8PROC=1
    USE_SYSTEM_LIBGIT2=1
    USE_SYSTEM_LIBSSH2=1
    USE_SYSTEM_MBEDTLS=1
    USE_SYSTEM_CURL=1
    USE_SYSTEM_PATCHELF=1
    USE_SYSTEM_ZLIB=1
    USE_SYSTEM_P7ZIP=1
    USE_SYSTEM_OPENLIBM=1
    USE_BLAS64=1
    LIBBLAS=-lblas64
    LIBBLASNAME=libblas64
    LIBLAPACK=-llapack64
    LIBLAPACKNAME=liblapack64
    MARCH=x86-64
    VERBOSE=1
    JLDFLAGS="$LDFLAGS"
    LLVM_CONFIG=llvm-config-15
  )

  LD_LIBRARY_PATH="/usr/lib/mbedtls2" make "${make_options[@]}" "$@"
}


prepare() {

    # create a var to the current dir
    CURRENT_DIR=$(pwd)

    cd $pkgname-$pkgver

    # Port to LLVM 15
    patch -p1 -i ../e08e1444.patch
    patch -p1 -i ../959902f1.patch
    patch -p1 -i ../f11bfc6c.patch
    patch -p1 -i ../21d4c2f1.patch
    # libunwind 1.6 compatibility
    patch -p1 -i ../julia-libunwind-1.6.patch
    # Don't hardcode library names
    patch -p1 -i ../julia-hardcoded-libs.patch
    # Fix tests with libgit2 1.7
    patch -p1 -i ../julia-libgit2-1.7.patch
    # Fix warnings with suitesparse 7
    cd stdlib/srccache
    tar -xzf SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz
    patch -d JuliaSparse-SparseArrays.jl-37e6e58 -p1 < "$srcdir"/julia-suitesparse-7.patch
    rm SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz
    tar -czf SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz JuliaSparse-SparseArrays.jl-37e6e58
    md5sum SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz | cut -d ' ' -f 1 > ../../deps/checksums/SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz/md5
    sha512sum SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz | cut -d ' ' -f 1 > ../../deps/checksums/SparseArrays-37e6e58706a54c5a1b96a17cda7d3e8be8bcb190.tar.gz/sha512

    # go back to the current dir
    cd $CURRENT_DIR
    mkdir -p ${srcdir}/${pkgname}-${pkgver}/pgo-lto
    cp ../pgoing.jl ${srcdir}/${pkgname}-${pkgver}/pgo-lto
}


build() {

    export CC=clang
    export CXX=clang++
    
    cd "${srcdir}/${pkgname}-${pkgver}"

    # Perform the build steps
    cd pgo-lto

    export PROFILE_FILE=$(pwd)/profile.profraw
    export COUNTERS_PER_SITE=6
    export PROFILE_DIR=${PWD}/profiles
    mkdir -p $PROFILE_DIR

    cd ..
    export STAGE1=${srcdir}/${pkgname}-${pkgver}/pgo-lto/stage1.build
    export STAGE2=${srcdir}/${pkgname}-${pkgver}/pgo-lto/stage2.build
    mkdir -p $STAGE1
    mkdir -p $STAGE2

    _make O=pgo-lto/stage1.build configure
    _make O=pgo-lto/stage2.build configure

    cd pgo-lto

    # Set PGO flags
    export PGO_CFLAGS="-fprofile-generate=${PROFILE_DIR} -Xclang -mllvm -Xclang -vp-counters-per-site=${COUNTERS_PER_SITE}"
    export PGO_CXXFLAGS="-fprofile-generate=${PROFILE_DIR} -Xclang -mllvm -Xclang -vp-counters-per-site=${COUNTERS_PER_SITE}"
    export PGO_LDFLAGS="-fuse-ld=lld -flto=thin -fprofile-generate=${PROFILE_DIR}"

    # backup original flags
    export CFLAGS_ORIG=$CFLAGS
    export CXXFLAGS_ORIG=$CXXFLAGS
    export LDFLAGS_ORIG=$LDFLAGS

    # Append PGO flags
    export CFLAGS="${CFLAGS} ${PGO_CFLAGS}"
    export CXXFLAGS="${CXXFLAGS} ${PGO_CXXFLAGS}"
    export LDFLAGS="${LDFLAGS} ${PGO_LDFLAGS}"
    _make -C $STAGE1
    
    # Clean profile dir
    rm -rf $PROFILE_DIR
    mkdir -p $PROFILE_DIR
    
    # Run stage 1 profiling
    ./stage1.build/julia -O3 pgoing.jl

    # create PROFAW_FILES_LIST
    llvm-profdata merge -output=${PROFILE_FILE} ${PROFILE_DIR}/*.profraw

    # Build stage 2
    export PGO_CFLAGS="-fprofile-use=${PROFILE_FILE}"
    export PGO_CXXFLAGS="-fprofile-use=${PROFILE_FILE}"
    export PGO_LDFLAGS="-fuse-ld=lld -flto=thin -fprofile-use=${PROFILE_FILE} -Wl,--icf=safe"

    export CFLAGS="${CFLAGS_ORIG} ${PGO_CFLAGS}"
    export CXXFLAGS="${CXXFLAGS_ORIG} ${PGO_CXXFLAGS}"
    export LDFLAGS="${LDFLAGS_ORIG} ${PGO_LDFLAGS}"

    _make -C $STAGE2
}


package() {

  cd $pkgname-$pkgver/pgo-lto/stage2.build
  _make DESTDIR="$pkgdir" install

  ln -sf /etc/ssl/cert.pem "$pkgdir"/usr/share/julia # Needed by some packages

  rm "$pkgdir"/usr/lib/julia/libccalltest.so.debug # Remove debug testing library
}

# vim:set ts=2 sw=2 et:
