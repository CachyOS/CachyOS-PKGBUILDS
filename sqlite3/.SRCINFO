# Maintainer: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Tom Newsom <Jeepster@gmx.co.uk>

pkgbase="sqlite"
pkgname=('sqlite' 'sqlite-tcl' 'sqlite-analyzer' 'lemon' 'sqlite-doc')
_srcver=3440200
_docver=${_srcver}
#_docver=3440000
pkgver=3.44.2
pkgrel=3
pkgdesc="A C library that implements an SQL database engine"
arch=('x86_64')
license=('custom:Public Domain')
url="https://www.sqlite.org/"
makedepends=('tcl' 'readline' 'zlib')
options=('!emptydirs')
source=(https://www.sqlite.org/2023/sqlite-src-${_srcver}.zip
        https://www.sqlite.org/2023/sqlite-doc-${_docver}.zip
        sqlite-lemon-system-template.patch
        license.txt
        git+https://github.com/ClickHouse/ClickBench.git)
# upstream now switched to sha3sums - currently not supported by makepkg
sha256sums=('73187473feb74509357e8fa6cb9fd67153b2d010d00aeb2fddb6ceeb18abaf27'
            '62e51962552fb204ef0a541d51f8f721499d1a3fffae6e86558d251c96084fcf'
            '55746d93b0df4b349c4aa4f09535746dac3530f9fd6de241c9f38e2c92e8ee97'
            '4e57d9ac979f1c9872e69799c2597eeef4c6ce7224f3ede0bf9dc8d217b1e65d'
            'SKIP')

prepare() {
  cd sqlite-src-$_srcver

  # patch taken from Fedora
  # https://src.fedoraproject.org/rpms/sqlite/blob/master/f/sqlite.spec
  patch -Np1 -i ../sqlite-lemon-system-template.patch

  #autoreconf -vfi
}

build() {
  # this uses malloc_usable_size, which is incompatible with fortification level 3
  export CFLAGS="${CFLAGS/_FORTIFY_SOURCE=3/_FORTIFY_SOURCE=2}"
  export CXXFLAGS="${CXXFLAGS/_FORTIFY_SOURCE=3/_FORTIFY_SOURCE=2}"
  

  export CPPFLAGS="$CPPFLAGS \
        -DSQLITE_ENABLE_COLUMN_METADATA=1 \
        -DSQLITE_ENABLE_UNLOCK_NOTIFY \
        -DSQLITE_ENABLE_DBSTAT_VTAB=1 \
        -DSQLITE_ENABLE_FTS3_TOKENIZER=1 \
        -DSQLITE_ENABLE_FTS3_PARENTHESIS \
        -DSQLITE_SECURE_DELETE \
        -DSQLITE_ENABLE_STMTVTAB \
        -DSQLITE_ENABLE_STAT4 \
        -DSQLITE_MAX_VARIABLE_NUMBER=250000 \
        -DSQLITE_MAX_EXPR_DEPTH=10000 \
        -DSQLITE_ENABLE_MATH_FUNCTIONS"

  # define PGO_PROFILE_DIR to use a custom directory for the profile data
  export PGO_PROFILE_DIR=$PWD/pgo-data
  mkdir -p ${PGO_PROFILE_DIR}

  #echo "PGO_PROFILE_DIR: ${PGO_PROFILE_DIR}"

  export CC=clang
  #export CXX=clang++

  export ORIG_CFLAGS="${CFLAGS}"
  #export ORIG_CXXFLAGS="${CXXFLAGS}"

  export CFLAGS+=" -g -fprofile-instr-generate"
  #export CXXFLAGS+=" -g -fprofile-instr-generate"


  # build sqlite
  cd sqlite-src-$_srcver
  ./configure --prefix=/usr \
  --enable-shared \
	--enable-fts3 \
	--enable-fts4 \
	--enable-fts5 \
	--enable-rtree \
	TCLLIBDIR=/usr/lib/sqlite$pkgver \

  sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
  make
  
  export SQLITE_DIR=$PWD

  # preparing PGO data
  # using ClickHouse ClickBench scripts
  cd ..
  export ROOT_DIR=$PWD
  mv hits.csv ClickBench/sqlite/hits.csv
  cd ClickBench/sqlite
  LLVM_PROFILE_FILE=${PGO_PROFILE_DIR}/_%m_%p.profraw $SQLITE_DIR/sqlite3 mydb < create.sql
  LLVM_PROFILE_FILE=${PGO_PROFILE_DIR}/_%m_%p.profraw $SQLITE_DIR/sqlite3 mydb '.import --csv hits.csv hits'
  wc -c mydb

  TRIES=3

  cat queries.sql | while read query; do
      sync
      echo 3 | sudo tee /proc/sys/vm/drop_caches

      echo "$query";
      for i in $(seq 1 $TRIES); do
          LLVM_PROFILE_FILE=${PGO_PROFILE_DIR}/_%m_%p.profraw $SQLITE_DIR/sqlite3 sqlite3 mydb <<< "${query}"
      done;
  done;


  cd $CURRENT_DIR

  # merge the profile data
  llvm-profdata merge -o merged.profdata ${PGO_PROFILE_DIR}/*.profraw

  export CFLAGS="${ORIG_CFLAGS} -fprofile-instr-use=merged.profdata"
  #export CXXFLAGS="${ORIG_CXXFLAGS} -fprofile-instr-use=/merged.profdata"

  make clean
  ./configure --prefix=/usr \
  --enable-shared \
  --enable-static \
	--enable-fts3 \
	--enable-fts4 \
	--enable-fts5 \
	--enable-rtree \
	TCLLIBDIR=/usr/lib/sqlite$pkgver \

  sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
  make

  # build additional tools
  make showdb showjournal showstat4 showwal sqldiff
}

package_sqlite() {
  

 pkgdesc="A C library that implements an SQL database engine"
 depends=('readline' 'zlib' 'glibc')
 provides=("sqlite3=$pkgver" 'libsqlite3.so')
 replaces=("sqlite3")

  cd sqlite-src-$_srcver
  make DESTDIR="${pkgdir}" install

  install -m755 showdb showjournal showstat4 showwal sqldiff "${pkgdir}"/usr/bin/

  # install manpage
  install -m755 -d "${pkgdir}"/usr/share/man/man1
  install -m644 sqlite3.1 "${pkgdir}"/usr/share/man/man1/

  # license - no linking required because pkgbase=pkgname
  install -D -m644 "${srcdir}"/license.txt "${pkgdir}"/usr/share/licenses/${pkgbase}/license.txt

  # split out tcl extension
  mkdir "$srcdir"/tcl
  mv "$pkgdir"/usr/lib/sqlite* "$srcdir"/tcl
}
