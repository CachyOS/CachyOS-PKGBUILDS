# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>
# Contributor: Aaron Griffin <aaron@archlinux.org>
# PGO Version: Laio Seman <laio [at] ieee.org>

pkgname=bash
_basever=5.2
_patchlevel=021
pkgver=${_basever}.${_patchlevel}
pkgrel=1
pkgdesc='The GNU Bourne Again shell'
arch=(x86_64)
license=(GPL)
url='https://www.gnu.org/software/bash/bash.html'
backup=(etc/bash.bash{rc,_logout} etc/skel/.bash{rc,_profile,_logout})
depends=(readline libreadline.so glibc ncurses)
optdepends=('bash-completion: for tab completion')
provides=('sh')
install=bash.install
source=(https://ftp.gnu.org/gnu/bash/bash-$_basever.tar.gz{,.sig}
    dot.bashrc
    dot.bash_profile
    dot.bash_logout
    system.bashrc
    system.bash_logout)
validpgpkeys=('7C0135FB088AAF6C66C650B9BB5869F064EA74AB') # Chet Ramey

if [[ $((10#${_patchlevel})) -gt 0 ]]; then
    for ((_p = 1; _p <= $((10#${_patchlevel})); _p++)); do
        source=(${source[@]} https://ftp.gnu.org/gnu/bash/bash-$_basever-patches/bash${_basever//./}-$(printf "%03d" $_p){,.sig})
    done
fi

prepare() {
    cd $pkgname-$_basever

    msg "Applying patches..."
    for ((_p = 1; _p <= $((10#${_patchlevel})); _p++)); do
        local patch="bash${_basever//./}-$(printf "%03d" $_p)"
        msg2 "applying patch ${patch}"
        patch -Np0 -i ../"${patch}"
    done
}

build() {
    cd $pkgname-$_basever

    _bashconfig=(-DDEFAULT_PATH_VALUE=\'\"/usr/local/sbin:/usr/local/bin:/usr/bin\"\'
        -DSTANDARD_UTILS_PATH=\'\"/usr/bin\"\'
        -DSYS_BASHRC=\'\"/etc/bash.bashrc\"\'
        -DSYS_BASH_LOGOUT=\'\"/etc/bash.bash_logout\"\'
        -DNON_INTERACTIVE_LOGIN_SHELLS)
    export CFLAGS="${CFLAGS} ${_bashconfig[@]}"
    export CFLAGS="${CFLAGS} -fprofile-generate -fprofile-update=atomic -fprofile-partial-training"

    ./configure \
        --prefix=/usr \
        --with-curses \
        --enable-readline \
        --without-bash-malloc \
        --with-installed-readline
    make
    make -C examples/loadables all others
    make -k check

    export CFLAGS="${CFLAGS//-fprofile-generate/}"
    export CFLAGS="${CFLAGS//-fprofile-update=atomic/}"

    export CFLAGS="${CFLAGS} -fprofile-use"

    make clean
    ./configure \
        --prefix=/usr \
        --with-curses \
        --enable-readline \
        --without-bash-malloc \
        --with-installed-readline
    make

}

check() {
    make -C $pkgname-$_basever check
}

package() {
    make -C $pkgname-$_basever DESTDIR="$pkgdir" install
    ln -s bash "$pkgdir/usr/bin/sh"
    ln -s bash "$pkgdir/usr/bin/rbash"

    # system-wide configuration files
    install -Dm644 system.bashrc "$pkgdir/etc/bash.bashrc"
    install -Dm644 system.bash_logout "$pkgdir/etc/bash.bash_logout"

    # user configuration file skeletons
    install -dm755 "$pkgdir/etc/skel/"
    install -m644 dot.bashrc "$pkgdir/etc/skel/.bashrc"
    install -m644 dot.bash_profile "$pkgdir/etc/skel/.bash_profile"
    install -m644 dot.bash_logout "$pkgdir/etc/skel/.bash_logout"
}

sha256sums=('a139c166df7ff4471c5e0733051642ee5556c1cc8a4a78f145583c5c81ab32fb'
    'SKIP'
    '959bc596166c9758fdd68836581f6b8f1d6fdb947d580bf24dce607998a077b8'
    'e149407c2bee17779caec70a7edd3d0000d172e7e4347429b80cb4d55bcec9c2'
    '4330edf340394d0dae50afb04ac2a621f106fe67fb634ec81c4bfb98be2a1eb5'
    '51ceca7cd615ff4e2f8f3373a46ac7bfd453be70bbaddc074cb17f6db1ac7370'
    '025bccfb374a3edce0ff8154d990689f30976b78f7a932dc9a6fcef81821811e'
    'f42f2fee923bc2209f406a1892772121c467f44533bedfe00a176139da5d310a'
    'SKIP'
    '45cc5e1b876550eee96f95bffb36c41b6cb7c07d33f671db5634405cd00fd7b8'
    'SKIP'
    '6a090cdbd334306fceacd0e4a1b9e0b0678efdbbdedbd1f5842035990c8abaff'
    'SKIP'
    '38827724bba908cf5721bd8d4e595d80f02c05c35f3dd7dbc4cd3c5678a42512'
    'SKIP'
    'ece0eb544368b3b4359fb8464caa9d89c7a6743c8ed070be1c7d599c3675d357'
    'SKIP'
    'd1e0566a257d149a0d99d450ce2885123f9995e9c01d0a5ef6df7044a72a468c'
    'SKIP'
    '2500a3fc21cb08133f06648a017cebfa27f30ea19c8cbe8dfefdf16227cfd490'
    'SKIP'
    '6b4bd92fd0099d1bab436b941875e99e0cb3c320997587182d6267af1844b1e8'
    'SKIP'
    'f95a817882eaeb0cb78bce82859a86bbb297a308ced730ebe449cd504211d3cd'
    'SKIP'
    'c7705e029f752507310ecd7270aef437e8043a9959e4d0c6065a82517996c1cd'
    'SKIP'
    '831b5f25bf3e88625f3ab315043be7498907c551f86041fa3b914123d79eb6f4'
    'SKIP'
    '2fb107ce1fb8e93f36997c8b0b2743fc1ca98a454c7cc5a3fcabec533f67d42c'
    'SKIP'
    '094b4fd81bc488a26febba5d799689b64d52a5505b63e8ee854f48d356bc7ce6'
    'SKIP'
    '3ef9246f2906ef1e487a0a3f4c647ae1c289cbd8459caa7db5ce118ef136e624'
    'SKIP'
    'ef73905169db67399a728e238a9413e0d689462cb9b72ab17a05dba51221358a'
    'SKIP'
    '155853bc5bd10e40a9bea369fb6f50a203a7d0358e9e32321be0d9fa21585915'
    'SKIP'
    '1c48cecbc9b7b4217990580203b7e1de19c4979d0bd2c0e310167df748df2c89'
    'SKIP'
    '4641dd49dd923b454dd0a346277907090410f5d60a29a2de3b82c98e49aaaa80'
    'SKIP'
    '325c26860ad4bba8558356c4ab914ac57e7b415dac6f5aae86b9b05ccb7ed282'
    'SKIP'
    'b6fc252aeb95ce67c9b017d29d81e8a5e285db4bf20d4ec8cdca35892be5c01d'
    'SKIP'
    '8334b88117ad047598f23581aeb0c66c0248cdd77abc3b4e259133aa307650cd'
    'SKIP')

# vim: ts=2 sw=2 et:
