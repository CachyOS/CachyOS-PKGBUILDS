# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Maintainer: Maxim Baz <archlinux at maximbaz dot com>
# Contributor: Andrew Gallant <jamslam@gmail.com>
# PGO Version: Laio Seman <laio@ieee.org>

pkgname=ripgrep
pkgver=14.1.1
pkgrel=2
pkgdesc="A search tool that combines the usability of ag with the raw speed of grep"
arch=('x86_64')
url='https://github.com/BurntSushi/ripgrep'
license=('MIT' 'custom')
depends=('gcc-libs' 'pcre2')
makedepends=('rust' 'hyperfine' 'llvm')
source=(https://github.com/BurntSushi/$pkgname/archive/$pkgver.tar.gz
        optimize.patch
        https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.10.9.tar.xz)
sha512sums=('6aacbc99025c1c0c301491574953bed4d7dd04f9ce7ce999c47eaa50d71ea7edd905f718e2e94031a5ad651d4daebce772c57ed291c639938991ad4574be8244'
            'a16bef98cdea7346f9b8d01bab269b939bc95d5c8878325f70f3be9ba0c9f2180b5f0f1d33d4ce684054cccaaecb9484fbf004c853de82daace06083821ac968'
            'e383ce1b999555888c6dd2efa806efb6f6673517000f074b4170a5461c85d4d83757193d4e7e18a1bb7ca166a793ab104ec7313bc6b147a0456e615eb006557e')

prepare() {
    cd "$pkgname-$pkgver"
    patch -p1 -i ../optimize.patch
}

build() {

    cd "$pkgname-$pkgver"
    export MALLOC_CONF="thp:always,metadata_thp:always"

    # define PGO_PROFILE_DIR to use a custom directory for the profile data
    export PGO_PROFILE_DIR=/tmp/pgo-data

    # clean up the profile data
    mkdir -p ${PGO_PROFILE_DIR}
    rm -f ${PGO_PROFILE_DIR}/*

    # append -Cprofile-generate=/tmp/pgo-data to the rustflags
    export RUSTFLAGS+=" -Cprofile-generate=${PGO_PROFILE_DIR}"

    cargo build --features 'pcre2' --release --target-dir target

    # clean up the profile data
    rm -f ${PGO_PROFILE_DIR}/*

    # run the benchmark
    hyperfine --warmup 5 --min-runs 10 'target/release/rg -n "PM_RESUME" ../linux-6.10.9'

    # run the tests
    cargo test

    # remove -Cprofile-generate=${PGO_PROFILE_DIR} from the rustflags
    export RUSTFLAGS=$(echo $RUSTFLAGS | sed -e 's/-Cprofile-generate=\/tmp\/pgo-data//')

    # merge the profile data
    llvm-profdata merge -o ${PGO_PROFILE_DIR}/merged.profdata ${PGO_PROFILE_DIR}

    # append -Cprofile-use=/tmp/pgo-data to the rustflags
    export RUSTFLAGS+=" -Cprofile-use=${PGO_PROFILE_DIR}/merged.profdata"

    cargo build --features 'pcre2' --release --target-dir target

}

check() {
    cd "$pkgname-$pkgver"

    cargo test --release --locked --features 'pcre2'
}

package() {
    cd "$pkgname-$pkgver"

    install -Dm755 "target/release/rg" "$pkgdir/usr/bin/rg"

    mkdir -p "$pkgdir/usr/share/zsh/site-functions"
    target/release/rg --generate complete-zsh >"$pkgdir/usr/share/zsh/site-functions/_rg"

    mkdir -p "$pkgdir/usr/share/bash-completion/completions"
    target/release/rg --generate complete-bash >"$pkgdir/usr/share/bash-completion/completions/rg"

    mkdir -p "$pkgdir/usr/share/fish/vendor_completions.d"
    target/release/rg --generate complete-fish >"$pkgdir/usr/share/fish/vendor_completions.d/rg.fish"

    mkdir -p "$pkgdir/usr/share/man/man1"
    target/release/rg --generate man >"$pkgdir/usr/share/man/man1/rg.1"

    install -Dm644 "README.md" "$pkgdir/usr/share/doc/${pkgname}/README.md"
    install -Dm644 "COPYING" "$pkgdir/usr/share/licenses/${pkgname}/COPYING"
    install -Dm644 "LICENSE-MIT" "$pkgdir/usr/share/licenses/${pkgname}/LICENSE-MIT"
    install -Dm644 "UNLICENSE" "$pkgdir/usr/share/licenses/${pkgname}/UNLICENSE"
}

# flags to 4 spaces
# vim: ts=4 sw=4 et:
